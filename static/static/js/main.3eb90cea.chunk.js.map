{"version":3,"sources":["CurrentTrack/CurrentTrack.module.css","App/App.module.css","SearchBar/SearchBar.module.css","AlbumListItem/AlbumListItem.module.css","SearchList/SearchList.module.css","PlaylistListItem/PlaylistListItem.module.css","TrackListItem/TrackListItem.module.css","Login/Login.module.css","PlayButton/PlayButton.module.css","FooterBar/FooterBar.module.css","AlbumColumItem/AlbumColumnItem.module.css","ArtistColumnItem/ArtistColumnItem.module.css","ArtistsColumnItem/ArtistsColumnItem.module.css","ArtistListItem/ArtistListItem.module.css","PlaylistColumnItem/PlaylistColumnItem.module.css","Login/index.js","Login/utils.js","SearchBar/index.js","SearchList/index.js","CurrentTrack/index.js","PlayButton/index.js","FooterBar/index.js","AlbumColumItem/index.js","ArtistColumnItem/index.js","ArtistsColumnItem/index.js","AlbumListItem/index.js","ArtistListItem/index.js","PlaylistColumnItem/index.js","PlaylistListItem/index.js","TrackListItem/index.js","api.js","PollingCurrentTrack/index.js","Player/index.js","App/index.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","_onLoginButtonClick","bind","onLoginCallback","this","token","URLSearchParams","window","location","search","get","localStorage","getItem","setItem","open","process","className","style","container","onClick","loginButton","React","Component","SearchBar","onSearchButtonClick","useState","q","setQ","_onSearchButtonClick","e","preventDefault","onSubmit","type","searchInput","value","onChange","target","searchButton","SearchList","_renderAlbums","_renderArtists","_renderPlaylists","_renderTracks","_isTrackInQueue","_isAlbumInQueue","_isPlaylistInQueue","albums","AlbumComponent","albumComponent","onViewAlbumButtonClick","onViewArtistButtonClick","onQueueAlbumButtonClick","length","Fragment","albumRowContainer","headerRowContainer","rowHeader","map","album","removeDefaultListItemStyle","rowContainer","inQueue","artists","ArtistComponent","artistComponent","key","artistRowContainer","artist","uri","playlists","PlaylistComponent","playlistComponent","onViewPlaylistButtonClick","onQueuePlaylistButtonClick","playlistRowContainer","playlist","track","inQueueTracks","includes","inQueueAlbums","inQueuePlaylists","tracks","TrackComponent","trackComponent","onQueueTrackButtonClick","trackRowContainer","removeDefaultListStyle","defaultProps","CurrentTrack","user","titleContainer","trackName","name","join","userContainer","PlayButton","onPlayButtonClick","FooterBar","displayPlayButton","currentTrack","_onPlayButtonClick","AlbumColumnItem","item","ArtistColumnItem","ArtistsColumnItem","reduce","arr","index","push","seperator","AlbumListItem","_onQueueAlbumButtonClick","queuedButton","queueButton","ArtistListItem","PlaylistColumnItem","PlaylistListItem","_onQueuePlaylistButtonClick","owner","display_name","TrackListItem","_onQueueTrackButtonClick","instance","axios","create","baseURL","a","async","offset","params","rv","data","enqueueTrack","post","id","enqueueAlbum","enqueuePlaylist","getCurrentTrack","getAlbumTracks","forEach","getArtistDetails","getPlaylistTracks","playlistTrack","PollingCurrentTrack","_poll","_pollingInterval","_previousCurrentTrack","setInterval","clearInterval","jukeboxApi","_","isEqual","onCurrentTrackChange","HLS_LOCATION","Player","_onMediaAttached","_onManifestParsed","_onError","_retryLoadResource","throttle","_audioRef","createRef","_hls","_mediaParsed","Hls","isSupported","attachMedia","current","on","Events","MEDIA_ATTACHED","src","addEventListener","prevProps","prevPlay","play","pause","loadSource","MANIFEST_PARSED","ERROR","onPlayerReady","fatal","console","log","startLoad","ref","PureComponent","_PlayerState","WAIT","READY","PLAY","App","_EMPTY_SEARCH_LIST_DATA","_onPlayerReady","_onPopState","_pushState","_onCurrentTrackChange","_onLoginCallback","_onViewAlbumButtonClick","_onViewArtistButtonClick","_onViewPlaylistButtonClick","state","login","isLogin","currentSearchListData","playerState","onpopstate","setState","event","history","pushState","defaults","headers","common","replaceState","searchBarContainer","searchListContainer","ArtistLiteItem","footerBarContainer","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3eb90cea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CurrentTrack_container__1c9mI\",\"titleContainer\":\"CurrentTrack_titleContainer__1YWwc\",\"trackName\":\"CurrentTrack_trackName__9nitb\",\"userContainer\":\"CurrentTrack_userContainer__2Pot3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___P6pN\",\"searchBarContainer\":\"App_searchBarContainer__Al5bq\",\"searchListContainer\":\"App_searchListContainer__3Ys--\",\"footerBarContainer\":\"App_footerBarContainer__1RtAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBar_container__2MFRT\",\"searchInput\":\"SearchBar_searchInput__1JgVW\",\"searchButton\":\"SearchBar_searchButton__27xGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AlbumListItem_container__Qouz7\",\"queueButton\":\"AlbumListItem_queueButton__3L4Oi ListItem_operationIcon__iLXRW\",\"queuedButton\":\"AlbumListItem_queuedButton__NC3Xd ListItem_operationIcon__iLXRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRowContainer\":\"SearchList_headerRowContainer__Xtn1b\",\"rowContainer\":\"SearchList_rowContainer__2oIGe\",\"rowHeader\":\"SearchList_rowHeader__1mmln\",\"albumRowContainer\":\"SearchList_albumRowContainer__17UsC\",\"artistRowContainer\":\"SearchList_artistRowContainer__3vrfT\",\"trackRowContainer\":\"SearchList_trackRowContainer__1ronW\",\"playlistRowContainer\":\"SearchList_playlistRowContainer__3Pbk2\",\"removeDefaultListItemStyle\":\"SearchList_removeDefaultListItemStyle__9p4Mr\",\"removeDefaultListStyle\":\"SearchList_removeDefaultListStyle__1lOz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlaylistListItem_container__1II6s\",\"queueButton\":\"PlaylistListItem_queueButton__7a8Xs ListItem_operationIcon__iLXRW\",\"queuedButton\":\"PlaylistListItem_queuedButton__3UoEw ListItem_operationIcon__iLXRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TrackListItem_container__eB6k9\",\"queueButton\":\"TrackListItem_queueButton__2lM7n ListItem_operationIcon__iLXRW\",\"queuedButton\":\"TrackListItem_queuedButton__1Jz2a ListItem_operationIcon__iLXRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__mNY_v\",\"loginButton\":\"Login_loginButton__7or5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlayButton_container__GmglC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FooterBar_container__1-DBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"AlbumColumnItem_item__31CwY ColumnItem_item__lng4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ArtistColumnItem_item__Tsy5c ColumnItem_item__lng4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seperator\":\"ArtistsColumnItem_seperator__3ZdP8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ArtistListItem_container__rTruI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PlaylistColumnItem_item__9FcpT ColumnItem_item__lng4h\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fetchTokenFromUrl } from \"./utils\";\nimport style from \"./Login.module.css\";\n\nconst LOGIN_URL = process.env.REACT_APP_LOGIN_URL;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onLoginButtonClick = this._onLoginButtonClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { onLoginCallback } = this.props;\n\n    const token = fetchTokenFromUrl() || localStorage.getItem(\"LoginToken\");\n    if (token) {\n      localStorage.setItem(\"LoginToken\", token);\n      onLoginCallback && onLoginCallback(token);\n    }\n  }\n\n  _onLoginButtonClick() {\n    window.open(LOGIN_URL, \"_self\");\n  }\n\n  render() {\n    return (\n      <div className={style.container}>\n        <h1>GYJUKEBOX</h1>\n        <button\n          onClick={this._onLoginButtonClick}\n          className={style.loginButton}\n        >\n          Login\n        </button>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  onLoginCallback: PropTypes.func\n};\n\nexport default Login;\n","export const fetchTokenFromUrl = () => {\n  const params = new URLSearchParams(window.location.search);\n  return params.get(\"token\") || null;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as SearchIcon } from \"bootstrap-icons/icons/search.svg\";\nimport style from \"./SearchBar.module.css\";\n\nconst SearchBar = props => {\n  const { onSearchButtonClick } = props;\n\n  const [q, setQ] = React.useState(\"\");\n\n  const _onSearchButtonClick = e => {\n    e.preventDefault();\n\n    onSearchButtonClick && onSearchButtonClick(q);\n  };\n\n  return (\n    <form className={style.container} onSubmit={_onSearchButtonClick}>\n      <input\n        type=\"text\"\n        className={style.searchInput}\n        value={q}\n        onChange={e => setQ(e.target.value)}\n      />\n      <button className={style.searchButton} onClick={_onSearchButtonClick}>\n        <SearchIcon />\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearchButtonClick: PropTypes.func\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as GearIcon } from \"bootstrap-icons/icons/gear-fill.svg\";\nimport style from \"./SearchList.module.css\";\n\nclass SearchList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._renderAlbums = this._renderAlbums.bind(this);\n    this._renderArtists = this._renderArtists.bind(this);\n    this._renderPlaylists = this._renderPlaylists.bind(this);\n    this._renderTracks = this._renderTracks.bind(this);\n    this._isTrackInQueue = this._isTrackInQueue.bind(this);\n    this._isAlbumInQueue = this._isAlbumInQueue.bind(this);\n    this._isPlaylistInQueue = this._isPlaylistInQueue.bind(this);\n  }\n\n  _renderAlbums() {\n    const {\n      albums,\n      albumComponent: AlbumComponent,\n      onViewAlbumButtonClick,\n      onViewArtistButtonClick,\n      onQueueAlbumButtonClick\n    } = this.props;\n    if (!AlbumComponent || !albums || albums.length === 0) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <li\n          className={`${style.albumRowContainer} ${style.headerRowContainer}`}\n        >\n          <div className={style.rowHeader}>Album</div>\n          <div className={style.rowHeader}>Artist</div>\n          <div className={style.rowHeader}>\n            <GearIcon />\n          </div>\n        </li>\n        {albums.map(album => (\n          <li\n            className={`${style.removeDefaultListItemStyle} ${style.rowContainer}`}\n          >\n            <AlbumComponent\n              album={album}\n              onViewAlbumButtonClick={onViewAlbumButtonClick}\n              onViewArtistButtonClick={onViewArtistButtonClick}\n              onQueueAlbumButtonClick={onQueueAlbumButtonClick}\n              inQueue={this._isAlbumInQueue(album)}\n            />\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  _renderArtists() {\n    const {\n      artists,\n      artistComponent: ArtistComponent,\n      onViewArtistButtonClick\n    } = this.props;\n    if (!ArtistComponent || !artists || artists.length === 0) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <li\n          key=\"artistsHeaderRow\"\n          className={`${style.headerRowContainer} ${style.artistRowContainer}`}\n        >\n          <div className={style.rowHeader}>Artist</div>\n        </li>\n        {artists.map(artist => (\n          <li\n            key={artist.uri}\n            className={`${style.removeDefaultListItemStyle} ${style.rowContainer}`}\n          >\n            <ArtistComponent\n              artist={artist}\n              onViewArtistButtonClick={onViewArtistButtonClick}\n            />\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  _renderPlaylists() {\n    const {\n      playlists,\n      playlistComponent: PlaylistComponent,\n      onViewPlaylistButtonClick,\n      onQueuePlaylistButtonClick\n    } = this.props;\n    if (!PlaylistComponent || !playlists || playlists.length === 0) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <li\n          key=\"playlistsHeaderRow\"\n          className={`${style.headerRowContainer} ${style.playlistRowContainer}`}\n        >\n          <div className={style.rowHeader}>Playlist</div>\n          <div className={style.rowHeader}>Owner</div>\n          <div className={style.rowHeader}>\n            <GearIcon />\n          </div>\n        </li>\n        {playlists.map(playlist => (\n          <li\n            key={playlist.uri}\n            className={`${style.removeDefaultListItemStyle} ${style.rowContainer}`}\n          >\n            <PlaylistComponent\n              playlist={playlist}\n              onViewPlaylistButtonClick={onViewPlaylistButtonClick}\n              onQueuePlaylistButtonClick={onQueuePlaylistButtonClick}\n              inQueue={this._isPlaylistInQueue(playlist)}\n            />\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  _isTrackInQueue(track) {\n    const { inQueueTracks } = this.props;\n    return inQueueTracks.map(track => track.uri).includes(track.uri);\n  }\n\n  _isAlbumInQueue(album) {\n    const { inQueueAlbums } = this.props;\n    return inQueueAlbums.map(album => album.uri).includes(album.uri);\n  }\n\n  _isPlaylistInQueue(playlist) {\n    const { inQueuePlaylists } = this.props;\n    return inQueuePlaylists\n      .map(playlist => playlist.uri)\n      .includes(playlist.uri);\n  }\n\n  _renderTracks() {\n    const {\n      tracks,\n      trackComponent: TrackComponent,\n      onQueueTrackButtonClick,\n      onViewAlbumButtonClick,\n      onViewArtistButtonClick\n    } = this.props;\n    if (!TrackComponent || !tracks || tracks.length === 0) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <li\n          key=\"tracksHeaderRow\"\n          className={`${style.trackRowContainer} ${style.headerRowContainer}`}\n        >\n          <div className={style.rowHeader}>Track</div>\n          <div className={style.rowHeader}>Artist</div>\n          <div className={style.rowHeader}>Album</div>\n          <div className={style.rowHeader}>\n            <GearIcon />\n          </div>\n        </li>\n        {tracks.map(track => (\n          <li\n            key={track.uri}\n            className={`${style.removeDefaultListItemStyle} ${style.rowContainer}`}\n          >\n            <TrackComponent\n              track={track}\n              inQueue={this._isTrackInQueue(track)}\n              onQueueTrackButtonClick={onQueueTrackButtonClick}\n              onViewAlbumButtonClick={onViewAlbumButtonClick}\n              onViewArtistButtonClick={onViewArtistButtonClick}\n            />\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ul className={style.removeDefaultListStyle}>{this._renderAlbums()}</ul>\n        <ul className={style.removeDefaultListStyle}>\n          {this._renderArtists()}\n        </ul>\n        <ul className={style.removeDefaultListStyle}>\n          {this._renderPlaylists()}\n        </ul>\n        <ul className={style.removeDefaultListStyle}>{this._renderTracks()}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nSearchList.propTypes = {\n  albums: PropTypes.array,\n  artists: PropTypes.array,\n  playlists: PropTypes.array,\n  tracks: PropTypes.array,\n  albumComponent: PropTypes.elementType,\n  artistComponent: PropTypes.elementType,\n  playlistComponent: PropTypes.elementType,\n  trackComponent: PropTypes.elementType,\n  inQueueTracks: PropTypes.array,\n  inQueueAlbums: PropTypes.array,\n  inQueuePlaylists: PropTypes.array,\n  onQueueTrackButtonClick: PropTypes.func,\n  onViewAlbumButtonClick: PropTypes.func,\n  onViewArtistButtonClick: PropTypes.func,\n  onViewPlaylistButtonClick: PropTypes.func,\n  onQueueAlbumButtonClick: PropTypes.func,\n  onQueuePlaylistButtonClick: PropTypes.func\n};\n\nSearchList.defaultProps = {\n  inQueueTracks: [],\n  inQueueAlbums: [],\n  inQueuePlaylists: []\n};\n\nexport default SearchList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as DotIcon } from \"bootstrap-icons/icons/dot.svg\";\nimport { ReactComponent as PlayIcon } from \"bootstrap-icons/icons/play-fill.svg\";\nimport style from \"./CurrentTrack.module.css\";\n\nconst CurrentTrack = props => {\n  const { track, user } = props;\n\n  if (!track) {\n    return null;\n  }\n\n  return (\n    <div className={style.container}>\n      <div className={style.titleContainer}>\n        <span className={style.trackName}>{track.name}</span>\n        <DotIcon />\n        <span>{track.artists.map(artist => artist.name).join(\", \")}</span>\n      </div>\n      <div className={style.userContainer}>\n        <PlayIcon />\n        <span>{user.name}</span>\n      </div>\n    </div>\n  );\n};\n\nCurrentTrack.propTypes = {\n  track: PropTypes.object,\n  user: PropTypes.object\n};\n\nexport default CurrentTrack;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PlayButton.module.css\";\n\nconst PlayButton = props => {\n  const { onPlayButtonClick } = props;\n\n  return (\n    <div className={style.container} onClick={onPlayButtonClick}>\n      Play\n    </div>\n  );\n};\n\nPlayButton.propTypes = {\n  onPlayButtonClick: PropTypes.func\n};\n\nexport default PlayButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CurrentTrack from \"../CurrentTrack\";\nimport PlayButton from \"../PlayButton\";\nimport style from \"./FooterBar.module.css\";\n\nconst FooterBar = props => {\n  const { displayPlayButton } = props;\n  let { currentTrack } = props;\n\n  currentTrack = currentTrack || {};\n\n  const _onPlayButtonClick = () => {\n    const { onPlayButtonClick } = props;\n\n    onPlayButtonClick && onPlayButtonClick();\n  };\n\n  const _renderPlayButton = () => {\n    if (!displayPlayButton || !currentTrack.track) {\n      return null;\n    }\n    return <PlayButton onPlayButtonClick={_onPlayButtonClick} />;\n  };\n\n  return (\n    <div className={style.container}>\n      <CurrentTrack user={currentTrack.user} track={currentTrack.track} />\n      {_renderPlayButton()}\n    </div>\n  );\n};\n\nFooterBar.propTypes = {\n  currentTrack: PropTypes.object,\n  displayPlayButton: PropTypes.bool,\n  onPlayButtonClick: PropTypes.func\n};\n\nexport default FooterBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./AlbumColumnItem.module.css\";\n\nconst AlbumColumnItem = props => {\n  const { album } = props;\n\n  const _onViewAlbumButtonClick = () => {\n    const { onViewAlbumButtonClick } = props;\n\n    onViewAlbumButtonClick && onViewAlbumButtonClick(album);\n  };\n\n  return (\n    <div>\n      <span className={style.item} onClick={_onViewAlbumButtonClick}>\n        {album.name}\n      </span>\n    </div>\n  );\n};\n\nAlbumColumnItem.propTypes = {\n  album: PropTypes.object.isRequired,\n  onViewAlbumButtonClick: PropTypes.func\n};\n\nexport default AlbumColumnItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ArtistColumnItem.module.css\";\n\nconst ArtistColumnItem = props => {\n  const { artist } = props;\n\n  const _onViewArtistButtonClick = () => {\n    const { onViewArtistButtonClick } = props;\n\n    onViewArtistButtonClick && onViewArtistButtonClick(artist);\n  };\n\n  return (\n    <span className={style.item} onClick={_onViewArtistButtonClick}>\n      {artist.name}\n    </span>\n  );\n};\n\nArtistColumnItem.propTypes = {\n  artist: PropTypes.object.isRequired,\n  onViewArtistButtonClick: PropTypes.func\n};\n\nexport default ArtistColumnItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ArtistColumnItem from \"../ArtistColumnItem\";\nimport style from \"./ArtistsColumnItem.module.css\";\n\nconst ArtistsColumnItem = props => {\n  const { artists } = props;\n\n  const _renderArtists = () => {\n    const { onViewArtistButtonClick } = props;\n\n    const result = artists.reduce((arr, artist, index) => {\n      arr.push(\n        <ArtistColumnItem\n          artist={artist}\n          onViewArtistButtonClick={onViewArtistButtonClick}\n        />\n      );\n      if (index !== artists.length - 1) {\n        arr.push(<span className={style.seperator}>, </span>);\n      }\n      return arr;\n    }, []);\n    return result;\n  };\n\n  return _renderArtists();\n};\n\nArtistsColumnItem.propTypes = {\n  artists: PropTypes.array.isRequired,\n  onViewArtistButtonClick: PropTypes.func\n};\n\nexport default ArtistsColumnItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AlbumColumnItem from \"../AlbumColumItem\";\nimport ArtistsColumnItem from \"../ArtistsColumnItem\";\nimport { ReactComponent as PlusIcon } from \"bootstrap-icons/icons/plus.svg\";\nimport { ReactComponent as CheckIcon } from \"bootstrap-icons/icons/check.svg\";\nimport style from \"./AlbumListItem.module.css\";\n\nconst AlbumListItem = props => {\n  const { album, onViewAlbumButtonClick, onViewArtistButtonClick } = props;\n\n  const _onQueueAlbumButtonClick = () => {\n    const { onQueueAlbumButtonClick } = props;\n\n    onQueueAlbumButtonClick && onQueueAlbumButtonClick(album);\n  };\n\n  const _renderQueueButton = () => {\n    const { inQueue } = props;\n    if (inQueue) {\n      return <CheckIcon className={style.queuedButton} />;\n    }\n    return (\n      <PlusIcon\n        onClick={_onQueueAlbumButtonClick}\n        className={style.queueButton}\n      />\n    );\n  };\n\n  return (\n    <div className={style.container}>\n      <div>\n        <AlbumColumnItem\n          album={album}\n          onViewAlbumButtonClick={onViewAlbumButtonClick}\n        />\n      </div>\n      <div>\n        <ArtistsColumnItem\n          artists={album.artists}\n          onViewArtistButtonClick={onViewArtistButtonClick}\n        />\n      </div>\n      <div>{_renderQueueButton()}</div>\n    </div>\n  );\n};\n\nAlbumListItem.propTypes = {\n  album: PropTypes.object.isRequired,\n  onViewAlbumButtonClick: PropTypes.func,\n  onViewArtistButtonClick: PropTypes.func,\n  onQueueAlbumButtonClick: PropTypes.func,\n  inQueue: PropTypes.bool\n};\n\nexport default AlbumListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ArtistColumnItem from \"../ArtistColumnItem\";\nimport style from \"./ArtistListItem.module.css\";\n\nconst ArtistListItem = props => {\n  const { artist, onViewArtistButtonClick } = props;\n\n  return (\n    <div className={style.container}>\n      <div>\n        <ArtistColumnItem\n          artist={artist}\n          onViewArtistButtonClick={onViewArtistButtonClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nArtistListItem.propTypes = {\n  artist: PropTypes.object.isRequired,\n  onViewArtistButtonClick: PropTypes.func\n};\n\nexport default ArtistListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PlaylistColumnItem.module.css\";\n\nconst PlaylistColumnItem = props => {\n  const { playlist } = props;\n\n  const _onViewPlaylistButtonClick = () => {\n    const { onViewPlaylistButtonClick } = props;\n\n    onViewPlaylistButtonClick && onViewPlaylistButtonClick(playlist);\n  };\n\n  return (\n    <span className={style.item} onClick={_onViewPlaylistButtonClick}>\n      {playlist.name}\n    </span>\n  );\n};\n\nPlaylistColumnItem.propTypes = {\n  playlist: PropTypes.object.isRequired,\n  onViewPlaylistButtonClick: PropTypes.func\n};\n\nexport default PlaylistColumnItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlaylistColumnItem from \"../PlaylistColumnItem\";\nimport { ReactComponent as PlusIcon } from \"bootstrap-icons/icons/plus.svg\";\nimport { ReactComponent as CheckIcon } from \"bootstrap-icons/icons/check.svg\";\nimport style from \"./PlaylistListItem.module.css\";\n\nconst PlaylistListItem = props => {\n  const { playlist, onViewPlaylistButtonClick } = props;\n\n  const _onQueuePlaylistButtonClick = () => {\n    const { onQueuePlaylistButtonClick } = props;\n\n    onQueuePlaylistButtonClick && onQueuePlaylistButtonClick(playlist);\n  };\n\n  const _renderQueueButton = () => {\n    const { inQueue } = props;\n    if (inQueue) {\n      return <CheckIcon className={style.queuedButton} />;\n    }\n    return (\n      <PlusIcon\n        onClick={_onQueuePlaylistButtonClick}\n        className={style.queueButton}\n      />\n    );\n  };\n\n  return (\n    <div className={style.container}>\n      <div>\n        <PlaylistColumnItem\n          playlist={playlist}\n          onViewPlaylistButtonClick={onViewPlaylistButtonClick}\n        />\n      </div>\n      <div>{playlist.owner.display_name}</div>\n      <div>{_renderQueueButton()}</div>\n    </div>\n  );\n};\n\nPlaylistListItem.propTypes = {\n  playlist: PropTypes.object.isRequired,\n  onViewPlaylistButtonClick: PropTypes.func,\n  onQueuePlaylistButtonClick: PropTypes.func,\n  inQueue: PropTypes.bool\n};\n\nexport default PlaylistListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as PlusIcon } from \"bootstrap-icons/icons/plus.svg\";\nimport { ReactComponent as CheckIcon } from \"bootstrap-icons/icons/check.svg\";\nimport AlbumColumnItem from \"../AlbumColumItem\";\nimport ArtistsColumnItem from \"../ArtistsColumnItem\";\nimport style from \"./TrackListItem.module.css\";\n\nconst TrackListItem = props => {\n  const { track, onViewArtistButtonClick } = props;\n\n  const _onQueueTrackButtonClick = () => {\n    const { onQueueTrackButtonClick } = props;\n\n    onQueueTrackButtonClick && onQueueTrackButtonClick(track);\n  };\n\n  const _onViewAlbumButtonClick = () => {\n    const { onViewAlbumButtonClick } = props;\n\n    onViewAlbumButtonClick && onViewAlbumButtonClick(track.album);\n  };\n\n  const _renderQueueButton = () => {\n    const { inQueue } = props;\n    if (inQueue) {\n      return <CheckIcon className={style.queuedButton} />;\n    }\n    return (\n      <PlusIcon\n        onClick={_onQueueTrackButtonClick}\n        className={style.queueButton}\n      />\n    );\n  };\n\n  return (\n    <div className={style.container}>\n      <div>{track.name}</div>\n      <div>\n        <ArtistsColumnItem\n          artists={track.artists}\n          onViewArtistButtonClick={onViewArtistButtonClick}\n        />\n      </div>\n      <div>\n        <AlbumColumnItem\n          album={track.album}\n          onViewAlbumButtonClick={_onViewAlbumButtonClick}\n        />\n      </div>\n      <div>{_renderQueueButton()}</div>\n    </div>\n  );\n};\n\nTrackListItem.propTypes = {\n  track: PropTypes.object.isRequired,\n  inQueue: PropTypes.bool,\n  onQueueTrackButtonClick: PropTypes.func,\n  onViewAlbumButtonClick: PropTypes.func,\n  onViewArtistButtonClick: PropTypes.func\n};\n\nexport default TrackListItem;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL\n});\n\nexport const PAGING_SIZE = 20;\n\nexport const setAuthorizationToken = token =>\n  (instance.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`);\n\nexport const search = async (q, offset = 0) => {\n  const rv = await instance.get(\"/search\", { params: { q, offset } });\n  return rv.data;\n};\n\nexport const enqueueTrack = track =>\n  instance.post(`/track/${track.id}/enqueue`);\n\nexport const enqueueAlbum = album =>\n  instance.post(`/album/${album.id}/enqueue`);\n\nexport const enqueuePlaylist = playlist =>\n  instance.post(`/playlist/${playlist.id}/enqueue`);\n\nexport const getCurrentTrack = async () => {\n  const rv = await instance.get(\"/track/current\");\n  const currentTrack = rv.data;\n  if (!currentTrack) {\n    return {\n      track: null,\n      user: null\n    };\n  }\n  return currentTrack;\n};\n\nexport const getAlbumTracks = async (album, offset = 0) => {\n  const params = { offset };\n  const rv = await instance.get(`/album/${album.id}/tracks`, { params });\n  rv.data.tracks.forEach(track => (track.album = album));\n  return rv.data;\n};\n\nexport const getArtistDetails = async (artist, offset = 0) => {\n  const params = { offset };\n  const rv = await instance.get(`/artist/${artist.id}/details`, { params });\n  return rv.data;\n};\n\nexport const getPlaylistTracks = async (playlist, offset = 0) => {\n  const params = { offset };\n  const rv = await instance.get(`/playlist/${playlist.id}/tracks`, { params });\n  rv.data.tracks = rv.data.tracks.map(playlistTrack => playlistTrack.track);\n  return rv.data;\n};\n","import _ from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as jukeboxApi from \"../api\";\n\nclass PollingCurrentTrack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._poll = this._poll.bind(this);\n\n    this._pollingInterval = null;\n    this._previousCurrentTrack = null;\n  }\n\n  componentDidMount() {\n    this._pollingInterval = setInterval(this._poll, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._pollingInterval);\n    this._pollingInterval = null;\n  }\n\n  async _poll() {\n    const currentTrack = await jukeboxApi.getCurrentTrack();\n    if (!_.isEqual(this._previousCurrentTrack, currentTrack)) {\n      const { onCurrentTrackChange } = this.props;\n      onCurrentTrackChange && onCurrentTrackChange(currentTrack);\n      this._previousCurrentTrack = currentTrack;\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nPollingCurrentTrack.propTypes = {\n  onCurrentTrackChange: PropTypes.func\n};\n\nexport default PollingCurrentTrack;\n","import _ from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Hls from \"hls.js\";\n\nconst HLS_LOCATION = process.env.REACT_APP_HLS_LOCATION;\n\nclass Player extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._onMediaAttached = this._onMediaAttached.bind(this);\n    this._onManifestParsed = this._onManifestParsed.bind(this);\n    this._onError = this._onError.bind(this);\n    this._retryLoadResource = _.throttle(\n      this._retryLoadResource.bind(this),\n      2000\n    );\n\n    this._audioRef = React.createRef();\n    this._hls = null;\n    this._mediaParsed = false;\n  }\n\n  componentDidMount() {\n    if (Hls.isSupported()) {\n      this._hls = new Hls();\n      this._hls.attachMedia(this._audioRef.current);\n      this._hls.on(Hls.Events.MEDIA_ATTACHED, this._onMediaAttached);\n    } else {\n      this._audioRef.current.src = HLS_LOCATION;\n      this._audioRef.current.addEventListener(\n        \"loadedmetadata\",\n        this._onManifestParsed\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { prevPlay } = prevProps;\n    const play = this.props;\n    if (prevPlay !== play) {\n      if (play) {\n        this._audioRef.current.play();\n      } else {\n        this._audioRef.current.pause();\n      }\n    }\n  }\n\n  _onMediaAttached() {\n    this._hls.loadSource(HLS_LOCATION);\n    this._hls.on(Hls.Events.MANIFEST_PARSED, this._onManifestParsed);\n    this._hls.on(Hls.Events.ERROR, this._onError);\n  }\n\n  _onManifestParsed() {\n    const { onPlayerReady } = this.props;\n\n    this._mediaParsed = true;\n    onPlayerReady && onPlayerReady();\n  }\n\n  _onError(_, data) {\n    if (data.fatal) {\n      console.log(\"encounter fatal error, try to recover\", data);\n      if (this._mediaParsed) {\n        this._hls.startLoad();\n      } else {\n        this._retryLoadResource();\n      }\n    }\n  }\n\n  _retryLoadResource() {\n    this._hls.loadSource(HLS_LOCATION);\n  }\n\n  render() {\n    return <audio ref={this._audioRef}></audio>;\n  }\n}\n\nPlayer.propTypes = {\n  onPlayerReady: PropTypes.func,\n  play: PropTypes.bool\n};\n\nexport default Player;\n","import React from \"react\";\nimport Login from \"../Login\";\nimport SearchBar from \"../SearchBar\";\nimport SearchList from \"../SearchList\";\nimport FooterBar from \"../FooterBar\";\nimport AlbumListItem from \"../AlbumListItem\";\nimport ArtistLiteItem from \"../ArtistListItem\";\nimport PlaylistListItem from \"../PlaylistListItem\";\nimport TrackListItem from \"../TrackListItem\";\nimport PollingCurrentTrack from \"../PollingCurrentTrack\";\nimport Player from \"../Player\";\nimport * as jukeboxApi from \"../api\";\nimport style from \"./App.module.css\";\n\nconst _PlayerState = {\n  WAIT: 1,\n  READY: 2,\n  PLAY: 3\n};\n\nclass App extends React.Component {\n  _EMPTY_SEARCH_LIST_DATA = {\n    albums: null,\n    artists: null,\n    playlists: null,\n    tracks: null\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._onPlayButtonClick = this._onPlayButtonClick.bind(this);\n    this._onPlayerReady = this._onPlayerReady.bind(this);\n    this._onPopState = this._onPopState.bind(this);\n    this._pushState = this._pushState.bind(this);\n    this._onCurrentTrackChange = this._onCurrentTrackChange.bind(this);\n    this._onLoginCallback = this._onLoginCallback.bind(this);\n    this._onQueueTrackButtonClick = this._onQueueTrackButtonClick.bind(this);\n    this._onQueueAlbumButtonClick = this._onQueueAlbumButtonClick.bind(this);\n    this._onQueuePlaylistButtonClick = this._onQueuePlaylistButtonClick.bind(\n      this\n    );\n    this._onViewAlbumButtonClick = this._onViewAlbumButtonClick.bind(this);\n    this._onViewArtistButtonClick = this._onViewArtistButtonClick.bind(this);\n    this._onViewPlaylistButtonClick = this._onViewPlaylistButtonClick.bind(\n      this\n    );\n    this._onSearchButtonClick = this._onSearchButtonClick.bind(this);\n\n    this.state = {\n      login: {\n        isLogin: false,\n        token: null\n      },\n      inQueueTracks: [],\n      inQueueAlbums: [],\n      inQueuePlaylists: [],\n      currentTrack: null,\n      currentSearchListData: this._EMPTY_SEARCH_LIST_DATA,\n      playerState: _PlayerState.WAIT\n    };\n\n    window.onpopstate = this._onPopState;\n  }\n\n  _onPlayButtonClick() {\n    const { playerState } = this.state;\n    if (playerState !== _PlayerState.READY) {\n      return;\n    }\n    this.setState({\n      playerState: _PlayerState.PLAY\n    });\n  }\n\n  _onPlayerReady() {\n    const { playerState } = this.state;\n    if (playerState !== _PlayerState.WAIT) {\n      return;\n    }\n    this.setState({\n      playerState: _PlayerState.READY\n    });\n  }\n\n  _onPopState(event) {\n    this.setState({\n      currentSearchListData: event.state\n    });\n  }\n\n  _pushState() {\n    const { currentSearchListData } = this.state;\n    window.history.pushState(currentSearchListData, null, \"/\");\n  }\n\n  _onCurrentTrackChange(currentTrack) {\n    this.setState({\n      currentTrack\n    });\n  }\n\n  _onLoginCallback(token) {\n    this.setState(\n      {\n        login: {\n          isLogin: true,\n          token\n        }\n      },\n      () => {\n        jukeboxApi.setAuthorizationToken(token);\n        window.history.replaceState(this._EMPTY_SEARCH_LIST_DATA, null, \"/\");\n      }\n    );\n  }\n\n  async _onQueueTrackButtonClick(track) {\n    await jukeboxApi.enqueueTrack(track);\n    this.setState(state => ({\n      inQueueTracks: [...state.inQueueTracks, track]\n    }));\n  }\n\n  async _onQueueAlbumButtonClick(album) {\n    await jukeboxApi.enqueueAlbum(album);\n    this.setState(state => ({\n      inQueueAlbums: [...state.inQueueAlbums, album]\n    }));\n  }\n\n  async _onQueuePlaylistButtonClick(playlist) {\n    await jukeboxApi.enqueuePlaylist(playlist);\n    this.setState(state => ({\n      inQueuePlaylists: [...state.inQueuePlaylists, playlist]\n    }));\n  }\n\n  async _onViewAlbumButtonClick(album) {\n    const { tracks } = await jukeboxApi.getAlbumTracks(album);\n    this.setState(\n      {\n        currentSearchListData: {\n          ...this._EMPTY_SEARCH_LIST_DATA,\n          tracks\n        }\n      },\n      this._pushState\n    );\n  }\n\n  async _onViewArtistButtonClick(artist) {\n    const { tracks, albums } = await jukeboxApi.getArtistDetails(artist);\n    this.setState(\n      {\n        currentSearchListData: {\n          ...this._EMPTY_SEARCH_LIST_DATA,\n          tracks,\n          albums\n        }\n      },\n      this._pushState\n    );\n  }\n\n  async _onViewPlaylistButtonClick(playlist) {\n    const { tracks } = await jukeboxApi.getPlaylistTracks(playlist);\n    this.setState(\n      {\n        currentSearchListData: {\n          ...this._EMPTY_SEARCH_LIST_DATA,\n          tracks\n        }\n      },\n      this._pushState\n    );\n  }\n\n  async _onSearchButtonClick(q) {\n    const { albums, artists, tracks, playlists } = await jukeboxApi.search(q);\n    this.setState(\n      {\n        currentSearchListData: {\n          ...this._EMPTY_SEARCH_LIST_DATA,\n          albums,\n          artists,\n          playlists,\n          tracks\n        }\n      },\n      this._pushState\n    );\n  }\n\n  render() {\n    const { login } = this.state;\n\n    if (!login.isLogin) {\n      return <Login onLoginCallback={this._onLoginCallback} />;\n    }\n\n    const {\n      inQueueTracks,\n      inQueueAlbums,\n      inQueuePlaylists,\n      currentTrack,\n      currentSearchListData,\n      playerState\n    } = this.state;\n\n    return (\n      <div className={style.container}>\n        <div className={style.searchBarContainer}>\n          <SearchBar onSearchButtonClick={this._onSearchButtonClick} />\n        </div>\n        <div className={style.searchListContainer}>\n          <SearchList\n            {...currentSearchListData}\n            inQueueTracks={inQueueTracks}\n            inQueueAlbums={inQueueAlbums}\n            inQueuePlaylists={inQueuePlaylists}\n            albumComponent={AlbumListItem}\n            artistComponent={ArtistLiteItem}\n            playlistComponent={PlaylistListItem}\n            trackComponent={TrackListItem}\n            onQueueTrackButtonClick={this._onQueueTrackButtonClick}\n            onQueueAlbumButtonClick={this._onQueueAlbumButtonClick}\n            onQueuePlaylistButtonClick={this._onQueuePlaylistButtonClick}\n            onViewAlbumButtonClick={this._onViewAlbumButtonClick}\n            onViewArtistButtonClick={this._onViewArtistButtonClick}\n            onViewPlaylistButtonClick={this._onViewPlaylistButtonClick}\n          />\n        </div>\n        <div className={style.footerBarContainer}>\n          <FooterBar\n            currentTrack={currentTrack}\n            displayPlayButton={playerState === _PlayerState.READY}\n            onPlayButtonClick={this._onPlayButtonClick}\n          />\n        </div>\n        <PollingCurrentTrack\n          onCurrentTrackChange={this._onCurrentTrackChange}\n        />\n        <Player\n          onPlayerReady={this._onPlayerReady}\n          play={playerState === _PlayerState.PLAY}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}