{"version":3,"sources":["SearchList/SearchList.module.css","CurrentTrack/CurrentTrack.module.css","App/App.module.css","SearchBar/SearchBar.module.css","TrackListItem/TrackListItem.module.css","Login/Login.module.css","PlayButton/PlayButton.module.css","FooterBar/FooterBar.module.css","AlbumColumItem/AlbumColumnItem.module.css","ArtistColumnItem/ArtistColumnItem.module.css","ArtistsColumnItem/ArtistsColumnItem.module.css","AlbumListItem/AlbumListItem.module.css","ArtistListItem/ArtistListItem.module.css","PlaylistColumnItem/PlaylistColumnItem.module.css","PlaylistListItem/PlaylistListItem.module.css","Login/index.js","Login/utils.js","SearchBar/index.js","SearchList/index.js","CurrentTrack/index.js","PlayButton/index.js","FooterBar/index.js","AlbumColumItem/index.js","ArtistColumnItem/index.js","ArtistsColumnItem/index.js","AlbumListItem/index.js","ArtistListItem/index.js","PlaylistColumnItem/index.js","PlaylistListItem/index.js","TrackListItem/index.js","api.js","PollingCurrentTrack/index.js","Player/index.js","App/index.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","_onLoginButtonClick","bind","onLoginCallback","this","token","URLSearchParams","window","location","search","get","open","process","className","style","container","onClick","loginButton","React","Component","SearchBar","onSearchButtonClick","useState","q","setQ","_onSearchButtonClick","e","preventDefault","onSubmit","type","searchInput","value","onChange","target","searchButton","SearchList","_renderAlbums","_renderArtists","_renderPlaylists","_renderTracks","_isTrackInQueue","albums","AlbumComponent","albumComponent","onViewAlbumButtonClick","onViewArtistButtonClick","length","Fragment","albumRowContainer","headerRowContainer","rowHeader","map","album","removeDefaultListItemStyle","rowContainer","artists","ArtistComponent","artistComponent","key","artistRowContainer","artist","uri","playlists","PlaylistComponent","playlistComponent","onViewPlaylistButtonClick","playlistRowContainer","playlist","track","inQueueTracks","includes","tracks","TrackComponent","trackComponent","onQueueTrackButtonClick","trackRowContainer","inQueue","removeDefaultListStyle","defaultProps","CurrentTrack","user","titleContainer","trackName","name","join","userContainer","PlayButton","onPlayButtonClick","FooterBar","displayPlayButton","currentTrack","_onPlayButtonClick","AlbumColumnItem","item","ArtistColumnItem","ArtistsColumnItem","reduce","arr","index","push","seperator","AlbumListItem","ArtistListItem","PlaylistColumnItem","PlaylistListItem","owner","display_name","TrackListItem","_onQueueTrackButtonClick","queuedButton","queueButton","instance","axios","create","baseURL","a","async","offset","params","rv","data","enqueue","post","id","getCurrentTrack","getAlbumTracks","forEach","getArtistDetails","getPlaylistTracks","playlistTrack","PollingCurrentTrack","_poll","_pollingInterval","_previousCurrentTrack","setInterval","clearInterval","jukeboxApi","_","isEqual","onCurrentTrackChange","Player","_onMediaAttached","_onManifestParsed","_onError","_audioRef","createRef","_hls","Hls","attachMedia","current","on","Events","MEDIA_ATTACHED","prevProps","prevPlay","play","pause","loadSource","MANIFEST_PARSED","ERROR","onPlayerReady","startLoad","ref","PureComponent","App","_EMPTY_SEARCH_LIST_DATA","_onPlayerReady","_onPopState","_pushState","_onCurrentTrackChange","_onLoginCallback","_onViewAlbumButtonClick","_onViewArtistButtonClick","_onViewPlaylistButtonClick","state","login","isLogin","currentSearchListData","onpopstate","setState","event","history","pushState","defaults","headers","common","replaceState","searchBarContainer","searchListContainer","ArtistLiteItem","footerBarContainer","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.347c6e46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRowContainer\":\"SearchList_headerRowContainer__Xtn1b\",\"rowContainer\":\"SearchList_rowContainer__2oIGe\",\"rowHeader\":\"SearchList_rowHeader__1mmln\",\"albumRowContainer\":\"SearchList_albumRowContainer__17UsC\",\"artistRowContainer\":\"SearchList_artistRowContainer__3vrfT\",\"trackRowContainer\":\"SearchList_trackRowContainer__1ronW\",\"playlistRowContainer\":\"SearchList_playlistRowContainer__3Pbk2\",\"removeDefaultListItemStyle\":\"SearchList_removeDefaultListItemStyle__9p4Mr\",\"removeDefaultListStyle\":\"SearchList_removeDefaultListStyle__1lOz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CurrentTrack_container__1c9mI\",\"titleContainer\":\"CurrentTrack_titleContainer__1YWwc\",\"trackName\":\"CurrentTrack_trackName__9nitb\",\"userContainer\":\"CurrentTrack_userContainer__2Pot3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___P6pN\",\"searchBarContainer\":\"App_searchBarContainer__Al5bq\",\"searchListContainer\":\"App_searchListContainer__3Ys--\",\"footerBarContainer\":\"App_footerBarContainer__1RtAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBar_container__2MFRT\",\"searchInput\":\"SearchBar_searchInput__1JgVW\",\"searchButton\":\"SearchBar_searchButton__27xGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TrackListItem_container__eB6k9\",\"queueButton\":\"TrackListItem_queueButton__2lM7n\",\"queuedButton\":\"TrackListItem_queuedButton__1Jz2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__mNY_v\",\"loginButton\":\"Login_loginButton__7or5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlayButton_container__GmglC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FooterBar_container__1-DBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"AlbumColumnItem_item__31CwY ColumnItem_item__lng4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ArtistColumnItem_item__Tsy5c ColumnItem_item__lng4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seperator\":\"ArtistsColumnItem_seperator__3ZdP8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AlbumListItem_container__Qouz7\",\"searchIcon\":\"AlbumListItem_searchIcon__d1b1A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ArtistListItem_container__rTruI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PlaylistColumnItem_item__9FcpT ColumnItem_item__lng4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlaylistListItem_container__1II6s\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fetchTokenFromUrl } from \"./utils\";\nimport style from \"./Login.module.css\";\n\nconst LOGIN_URL = process.env.REACT_APP_LOGIN_URL;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onLoginButtonClick = this._onLoginButtonClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { onLoginCallback } = this.props;\n\n    const token = fetchTokenFromUrl();\n    if (token) {\n      onLoginCallback && onLoginCallback(token);\n    }\n  }\n\n  _onLoginButtonClick() {\n    window.open(LOGIN_URL, \"_self\");\n  }\n\n  render() {\n    return (\n      <div className={style.container}>\n        <h1>GYJUKEBOX</h1>\n        <button\n          onClick={this._onLoginButtonClick}\n          className={style.loginButton}\n        >\n          Login\n        </button>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  onLoginCallback: PropTypes.func\n};\n\nexport default Login;\n","export const fetchTokenFromUrl = () => {\n  const params = new URLSearchParams(window.location.search);\n  return params.get(\"token\") || null;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as SearchIcon } from \"bootstrap-icons/icons/search.svg\";\nimport style from \"./SearchBar.module.css\";\n\nconst SearchBar = props => {\n  const { onSearchButtonClick } = props;\n\n  const [q, setQ] = React.useState(\"\");\n\n  const _onSearchButtonClick = e => {\n    e.preventDefault();\n\n    onSearchButtonClick && onSearchButtonClick(q);\n  };\n\n  return (\n    <form className={style.container} onSubmit={_onSearchButtonClick}>\n      <input\n        type=\"text\"\n        className={style.searchInput}\n        value={q}\n        onChange={e => setQ(e.target.value)}\n      />\n      <button className={style.searchButton} onClick={_onSearchButtonClick}>\n        <SearchIcon />\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearchButtonClick: PropTypes.func\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as GearIcon } from \"bootstrap-icons/icons/gear-fill.svg\";\nimport style from \"./SearchList.module.css\";\n\nclass SearchList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._renderAlbums = this._renderAlbums.bind(this);\n    this._renderArtists = this._renderArtists.bind(this);\n    this._renderPlaylists = this._renderPlaylists.bind(this);\n    this._renderTracks = this._renderTracks.bind(this);\n    this._isTrackInQueue = this._isTrackInQueue.bind(this);\n  }\n\n  _renderAlbums() {\n    const {\n      albums,\n      albumComponent: AlbumComponent,\n      onViewAlbumButtonClick,\n      onViewArtistButtonClick\n    } = this.props;\n    if (!AlbumComponent || !albums || albums.length === 0) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <li\n          className={`${style.albumRowContainer} ${style.headerRowContainer}`}\n        >\n          <div className={style.rowHeader}>Album</div>\n          <div className={style.rowHeader}>Artist</div>\n        </li>\n        {albums.map(album => (\n          <li\n            className={`${style.removeDefaultListItemStyle} ${style.rowContainer}`}\n          >\n            <AlbumComponent\n              album={album}\n              onViewAlbumButtonClick={onViewAlbumButtonClick}\n              onViewArtistButtonClick={onViewArtistButtonClick}\n            />\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  _renderArtists() {\n    const {\n      artists,\n      artistComponent: ArtistComponent,\n      onViewArtistButtonClick\n    } = this.props;\n    if (!ArtistComponent || !artists || artists.length === 0) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <li\n          key=\"artistsHeaderRow\"\n          className={`${style.headerRowContainer} ${style.artistRowContainer}`}\n        >\n          <div className={style.rowHeader}>Artist</div>\n        </li>\n        {artists.map(artist => (\n          <li\n            key={artist.uri}\n            className={`${style.removeDefaultListItemStyle} ${style.rowContainer}`}\n          >\n            <ArtistComponent\n              artist={artist}\n              onViewArtistButtonClick={onViewArtistButtonClick}\n            />\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  _renderPlaylists() {\n    const {\n      playlists,\n      playlistComponent: PlaylistComponent,\n      onViewPlaylistButtonClick\n    } = this.props;\n    if (!PlaylistComponent || !playlists || playlists.length === 0) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <li\n          key=\"playlistsHeaderRow\"\n          className={`${style.headerRowContainer} ${style.playlistRowContainer}`}\n        >\n          <div className={style.rowHeader}>Playlist</div>\n          <div className={style.rowHeader}>Owner</div>\n        </li>\n        {playlists.map(playlist => (\n          <li\n            key={playlist.uri}\n            className={`${style.removeDefaultListItemStyle} ${style.rowContainer}`}\n          >\n            <PlaylistComponent\n              playlist={playlist}\n              onViewPlaylistButtonClick={onViewPlaylistButtonClick}\n            />\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  _isTrackInQueue(track) {\n    const { inQueueTracks } = this.props;\n    return inQueueTracks.map(track => track.uri).includes(track.uri);\n  }\n\n  _renderTracks() {\n    const {\n      tracks,\n      trackComponent: TrackComponent,\n      onQueueTrackButtonClick,\n      onViewAlbumButtonClick,\n      onViewArtistButtonClick\n    } = this.props;\n    if (!TrackComponent || !tracks || tracks.length === 0) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <li\n          key=\"tracksHeaderRow\"\n          className={`${style.trackRowContainer} ${style.headerRowContainer}`}\n        >\n          <div className={style.rowHeader}>Track</div>\n          <div className={style.rowHeader}>Artist</div>\n          <div className={style.rowHeader}>Album</div>\n          <div className={style.rowHeader}>\n            <GearIcon />\n          </div>\n        </li>\n        {tracks.map(track => (\n          <li\n            key={track.uri}\n            className={`${style.removeDefaultListItemStyle} ${style.rowContainer}`}\n          >\n            <TrackComponent\n              track={track}\n              inQueue={this._isTrackInQueue(track)}\n              onQueueTrackButtonClick={onQueueTrackButtonClick}\n              onViewAlbumButtonClick={onViewAlbumButtonClick}\n              onViewArtistButtonClick={onViewArtistButtonClick}\n            />\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ul className={style.removeDefaultListStyle}>{this._renderAlbums()}</ul>\n        <ul className={style.removeDefaultListStyle}>\n          {this._renderArtists()}\n        </ul>\n        <ul className={style.removeDefaultListStyle}>\n          {this._renderPlaylists()}\n        </ul>\n        <ul className={style.removeDefaultListStyle}>{this._renderTracks()}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nSearchList.propTypes = {\n  albums: PropTypes.array,\n  artists: PropTypes.array,\n  playlists: PropTypes.array,\n  tracks: PropTypes.array,\n  albumComponent: PropTypes.elementType,\n  artistComponent: PropTypes.elementType,\n  playlistComponent: PropTypes.elementType,\n  trackComponent: PropTypes.elementType,\n  inQueueTracks: PropTypes.array,\n  onQueueTrackButtonClick: PropTypes.func,\n  onViewAlbumButtonClick: PropTypes.func,\n  onViewArtistButtonClick: PropTypes.func,\n  onViewPlaylistButtonClick: PropTypes.func\n};\n\nSearchList.defaultProps = {\n  inQueueTracks: []\n};\n\nexport default SearchList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as DotIcon } from \"bootstrap-icons/icons/dot.svg\";\nimport { ReactComponent as PlayIcon } from \"bootstrap-icons/icons/play-fill.svg\";\nimport style from \"./CurrentTrack.module.css\";\n\nconst CurrentTrack = props => {\n  const { track, user } = props;\n\n  if (!track) {\n    return null;\n  }\n\n  return (\n    <div className={style.container}>\n      <div className={style.titleContainer}>\n        <span className={style.trackName}>{track.name}</span>\n        <DotIcon />\n        <span>{track.artists.map(artist => artist.name).join(\", \")}</span>\n      </div>\n      <div className={style.userContainer}>\n        <PlayIcon />\n        <span>{user.name}</span>\n      </div>\n    </div>\n  );\n};\n\nCurrentTrack.propTypes = {\n  track: PropTypes.object,\n  user: PropTypes.object\n};\n\nexport default CurrentTrack;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PlayButton.module.css\";\n\nconst PlayButton = props => {\n  const { onPlayButtonClick } = props;\n\n  return (\n    <div className={style.container} onClick={onPlayButtonClick}>\n      Play\n    </div>\n  );\n};\n\nPlayButton.propTypes = {\n  onPlayButtonClick: PropTypes.func\n};\n\nexport default PlayButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CurrentTrack from \"../CurrentTrack\";\nimport PlayButton from \"../PlayButton\";\nimport style from \"./FooterBar.module.css\";\n\nconst FooterBar = props => {\n  const { displayPlayButton } = props;\n  let { currentTrack } = props;\n\n  currentTrack = currentTrack || {};\n\n  const _onPlayButtonClick = () => {\n    const { onPlayButtonClick } = props;\n\n    onPlayButtonClick && onPlayButtonClick();\n  };\n\n  const _renderPlayButton = () => {\n    if (!displayPlayButton || !currentTrack.track) {\n      return null;\n    }\n    return <PlayButton onPlayButtonClick={_onPlayButtonClick} />;\n  };\n\n  return (\n    <div className={style.container}>\n      <CurrentTrack user={currentTrack.user} track={currentTrack.track} />\n      {_renderPlayButton()}\n    </div>\n  );\n};\n\nFooterBar.propTypes = {\n  currentTrack: PropTypes.object,\n  displayPlayButton: PropTypes.bool,\n  onPlayButtonClick: PropTypes.func\n};\n\nexport default FooterBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./AlbumColumnItem.module.css\";\n\nconst AlbumColumnItem = props => {\n  const { album } = props;\n\n  const _onViewAlbumButtonClick = () => {\n    const { onViewAlbumButtonClick } = props;\n\n    onViewAlbumButtonClick && onViewAlbumButtonClick(album);\n  };\n\n  return (\n    <div>\n      <span className={style.item} onClick={_onViewAlbumButtonClick}>\n        {album.name}\n      </span>\n    </div>\n  );\n};\n\nAlbumColumnItem.propTypes = {\n  album: PropTypes.object.isRequired,\n  onViewAlbumButtonClick: PropTypes.func\n};\n\nexport default AlbumColumnItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ArtistColumnItem.module.css\";\n\nconst ArtistColumnItem = props => {\n  const { artist } = props;\n\n  const _onViewArtistButtonClick = () => {\n    const { onViewArtistButtonClick } = props;\n\n    onViewArtistButtonClick && onViewArtistButtonClick(artist);\n  };\n\n  return (\n    <span className={style.item} onClick={_onViewArtistButtonClick}>\n      {artist.name}\n    </span>\n  );\n};\n\nArtistColumnItem.propTypes = {\n  artist: PropTypes.object.isRequired,\n  onViewArtistButtonClick: PropTypes.func\n};\n\nexport default ArtistColumnItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ArtistColumnItem from \"../ArtistColumnItem\";\nimport style from \"./ArtistsColumnItem.module.css\";\n\nconst ArtistsColumnItem = props => {\n  const { artists } = props;\n\n  const _renderArtists = () => {\n    const { onViewArtistButtonClick } = props;\n\n    const result = artists.reduce((arr, artist, index) => {\n      arr.push(\n        <ArtistColumnItem\n          artist={artist}\n          onViewArtistButtonClick={onViewArtistButtonClick}\n        />\n      );\n      if (index !== artists.length - 1) {\n        arr.push(<span className={style.seperator}>, </span>);\n      }\n      return arr;\n    }, []);\n    return result;\n  };\n\n  return _renderArtists();\n};\n\nArtistsColumnItem.propTypes = {\n  artists: PropTypes.array.isRequired,\n  onViewArtistButtonClick: PropTypes.func\n};\n\nexport default ArtistsColumnItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AlbumColumnItem from \"../AlbumColumItem\";\nimport ArtistsColumnItem from \"../ArtistsColumnItem\";\nimport style from \"./AlbumListItem.module.css\";\n\nconst AlbumListItem = props => {\n  const { album, onViewAlbumButtonClick, onViewArtistButtonClick } = props;\n\n  return (\n    <div className={style.container}>\n      <div>\n        <AlbumColumnItem\n          album={album}\n          onViewAlbumButtonClick={onViewAlbumButtonClick}\n        />\n      </div>\n      <div>\n        <ArtistsColumnItem\n          artists={album.artists}\n          onViewArtistButtonClick={onViewArtistButtonClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nAlbumListItem.propTypes = {\n  album: PropTypes.object.isRequired,\n  onViewAlbumButtonClick: PropTypes.func,\n  onViewArtistButtonClick: PropTypes.func\n};\n\nexport default AlbumListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ArtistColumnItem from \"../ArtistColumnItem\";\nimport style from \"./ArtistListItem.module.css\";\n\nconst ArtistListItem = props => {\n  const { artist, onViewArtistButtonClick } = props;\n\n  return (\n    <div className={style.container}>\n      <div>\n        <ArtistColumnItem\n          artist={artist}\n          onViewArtistButtonClick={onViewArtistButtonClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nArtistListItem.propTypes = {\n  artist: PropTypes.object.isRequired,\n  onViewArtistButtonClick: PropTypes.func\n};\n\nexport default ArtistListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PlaylistColumnItem.module.css\";\n\nconst PlaylistColumnItem = props => {\n  const { playlist } = props;\n\n  const _onViewPlaylistButtonClick = () => {\n    const { onViewPlaylistButtonClick } = props;\n\n    onViewPlaylistButtonClick && onViewPlaylistButtonClick(playlist);\n  };\n\n  return (\n    <span className={style.item} onClick={_onViewPlaylistButtonClick}>\n      {playlist.name}\n    </span>\n  );\n};\n\nPlaylistColumnItem.propTypes = {\n  playlist: PropTypes.object.isRequired,\n  onViewPlaylistButtonClick: PropTypes.func\n};\n\nexport default PlaylistColumnItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlaylistColumnItem from \"../PlaylistColumnItem\";\nimport style from \"./PlaylistListItem.module.css\";\n\nconst PlaylistListItem = props => {\n  const { playlist, onViewPlaylistButtonClick } = props;\n\n  return (\n    <div className={style.container}>\n      <div>\n        <PlaylistColumnItem\n          playlist={playlist}\n          onViewPlaylistButtonClick={onViewPlaylistButtonClick}\n        />\n      </div>\n      <div>{playlist.owner.display_name}</div>\n    </div>\n  );\n};\n\nPlaylistListItem.propTypes = {\n  playlist: PropTypes.object.isRequired,\n  onViewPlaylistButtonClick: PropTypes.func\n};\n\nexport default PlaylistListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ReactComponent as PlusIcon } from \"bootstrap-icons/icons/plus.svg\";\nimport { ReactComponent as CheckIcon } from \"bootstrap-icons/icons/check.svg\";\nimport AlbumColumnItem from \"../AlbumColumItem\";\nimport ArtistsColumnItem from \"../ArtistsColumnItem\";\nimport style from \"./TrackListItem.module.css\";\n\nconst TrackListItem = props => {\n  const { track, onViewArtistButtonClick } = props;\n\n  const _onQueueTrackButtonClick = () => {\n    const { onQueueTrackButtonClick } = props;\n\n    onQueueTrackButtonClick && onQueueTrackButtonClick(track);\n  };\n\n  const _onViewAlbumButtonClick = () => {\n    const { onViewAlbumButtonClick } = props;\n\n    onViewAlbumButtonClick && onViewAlbumButtonClick(track.album);\n  };\n\n  const _renderQueueButton = () => {\n    const { inQueue } = props;\n    if (inQueue) {\n      return <CheckIcon className={style.queuedButton} />;\n    }\n    return (\n      <PlusIcon\n        onClick={_onQueueTrackButtonClick}\n        className={style.queueButton}\n      />\n    );\n  };\n\n  return (\n    <div className={style.container}>\n      <div>{track.name}</div>\n      <div>\n        <ArtistsColumnItem\n          artists={track.artists}\n          onViewArtistButtonClick={onViewArtistButtonClick}\n        />\n      </div>\n      <div>\n        <AlbumColumnItem\n          album={track.album}\n          onViewAlbumButtonClick={_onViewAlbumButtonClick}\n        />\n      </div>\n      <div>{_renderQueueButton()}</div>\n    </div>\n  );\n};\n\nTrackListItem.propTypes = {\n  track: PropTypes.object.isRequired,\n  inQueue: PropTypes.bool,\n  onQueueTrackButtonClick: PropTypes.func,\n  onViewAlbumButtonClick: PropTypes.func,\n  onViewArtistButtonClick: PropTypes.func\n};\n\nexport default TrackListItem;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL\n});\n\nexport const PAGING_SIZE = 20;\n\nexport const setAuthorizationToken = token =>\n  (instance.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`);\n\nexport const search = async (q, offset = 0) => {\n  const rv = await instance.get(\"/search\", { params: { q, offset } });\n  return rv.data;\n};\n\nexport const enqueue = track => instance.post(`/track/${track.id}/enqueue`);\n\nexport const getCurrentTrack = async () => {\n  const rv = await instance.get(\"/track/current\");\n  const currentTrack = rv.data;\n  if (!currentTrack) {\n    return {\n      track: null,\n      user: null\n    };\n  }\n  return currentTrack;\n};\n\nexport const getAlbumTracks = async (album, offset = 0) => {\n  const params = { offset };\n  const rv = await instance.get(`/album/${album.id}/tracks`, { params });\n  rv.data.tracks.forEach(track => (track.album = album));\n  return rv.data;\n};\n\nexport const getArtistDetails = async (artist, offset = 0) => {\n  const params = { offset };\n  const rv = await instance.get(`/artist/${artist.id}/details`, { params });\n  return rv.data;\n};\n\nexport const getPlaylistTracks = async (playlist, offset = 0) => {\n  const params = { offset };\n  const rv = await instance.get(`/playlist/${playlist.id}/tracks`, { params });\n  rv.data.tracks = rv.data.tracks.map(playlistTrack => playlistTrack.track);\n  return rv.data;\n};\n","import _ from \"lodash\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as jukeboxApi from \"../api\";\n\nclass PollingCurrentTrack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._poll = this._poll.bind(this);\n\n    this._pollingInterval = null;\n    this._previousCurrentTrack = null;\n  }\n\n  componentDidMount() {\n    this._pollingInterval = setInterval(this._poll, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._pollingInterval);\n    this._pollingInterval = null;\n  }\n\n  async _poll() {\n    const currentTrack = await jukeboxApi.getCurrentTrack();\n    if (!_.isEqual(this._previousCurrentTrack, currentTrack)) {\n      const { onCurrentTrackChange } = this.props;\n      onCurrentTrackChange && onCurrentTrackChange(currentTrack);\n      this._previousCurrentTrack = currentTrack;\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nPollingCurrentTrack.propTypes = {\n  onCurrentTrackChange: PropTypes.func\n};\n\nexport default PollingCurrentTrack;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Hls from \"hls.js\";\n\nconst HLS_LOCATION = process.env.REACT_APP_HLS_LOCATION;\n\nclass Player extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this._onMediaAttached = this._onMediaAttached.bind(this);\n    this._onManifestParsed = this._onManifestParsed.bind(this);\n    this._onError = this._onError.bind(this);\n\n    this._audioRef = React.createRef();\n    this._hls = new Hls();\n  }\n\n  componentDidMount() {\n    this._hls.attachMedia(this._audioRef.current);\n    this._hls.on(Hls.Events.MEDIA_ATTACHED, this._onMediaAttached);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { prevPlay } = prevProps;\n    const play = this.props;\n    if (prevPlay !== play) {\n      if (play) {\n        this._audioRef.current.play();\n      } else {\n        this._audioRef.current.pause();\n      }\n    }\n  }\n\n  _onMediaAttached() {\n    this._hls.loadSource(HLS_LOCATION);\n    this._hls.on(Hls.Events.MANIFEST_PARSED, this._onManifestParsed);\n    this._hls.on(Hls.Events.ERROR, this._onError);\n  }\n\n  _onManifestParsed() {\n    const { onPlayerReady } = this.props;\n\n    onPlayerReady && onPlayerReady();\n  }\n\n  _onError(_, data) {\n    if (data.type === \"networkError\") {\n      this._hls.startLoad();\n    }\n  }\n\n  render() {\n    return <audio ref={this._audioRef}></audio>;\n  }\n}\n\nPlayer.propTypes = {\n  onPlayerReady: PropTypes.func,\n  play: PropTypes.bool\n};\n\nexport default Player;\n","import React from \"react\";\nimport Login from \"../Login\";\nimport SearchBar from \"../SearchBar\";\nimport SearchList from \"../SearchList\";\nimport FooterBar from \"../FooterBar\";\nimport AlbumListItem from \"../AlbumListItem\";\nimport ArtistLiteItem from \"../ArtistListItem\";\nimport PlaylistListItem from \"../PlaylistListItem\";\nimport TrackListItem from \"../TrackListItem\";\nimport PollingCurrentTrack from \"../PollingCurrentTrack\";\nimport Player from \"../Player\";\nimport * as jukeboxApi from \"../api\";\nimport style from \"./App.module.css\";\n\nclass App extends React.Component {\n  _EMPTY_SEARCH_LIST_DATA = {\n    albums: null,\n    artists: null,\n    playlists: null,\n    tracks: null\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._onPlayButtonClick = this._onPlayButtonClick.bind(this);\n    this._onPlayerReady = this._onPlayerReady.bind(this);\n    this._onPopState = this._onPopState.bind(this);\n    this._pushState = this._pushState.bind(this);\n    this._onCurrentTrackChange = this._onCurrentTrackChange.bind(this);\n    this._onLoginCallback = this._onLoginCallback.bind(this);\n    this._onQueueTrackButtonClick = this._onQueueTrackButtonClick.bind(this);\n    this._onViewAlbumButtonClick = this._onViewAlbumButtonClick.bind(this);\n    this._onViewArtistButtonClick = this._onViewArtistButtonClick.bind(this);\n    this._onViewPlaylistButtonClick = this._onViewPlaylistButtonClick.bind(\n      this\n    );\n    this._onSearchButtonClick = this._onSearchButtonClick.bind(this);\n\n    this.state = {\n      login: {\n        isLogin: false,\n        token: null\n      },\n      inQueueTracks: [],\n      currentTrack: null,\n      currentSearchListData: this._EMPTY_SEARCH_LIST_DATA,\n      displayPlayButton: false,\n      play: false\n    };\n\n    window.onpopstate = this._onPopState;\n  }\n\n  _onPlayButtonClick() {\n    this.setState({\n      play: true,\n      displayPlayButton: false\n    });\n  }\n\n  _onPlayerReady() {\n    this.setState({\n      displayPlayButton: true\n    });\n  }\n\n  _onPopState(event) {\n    this.setState({\n      currentSearchListData: event.state\n    });\n  }\n\n  _pushState() {\n    const { currentSearchListData } = this.state;\n    window.history.pushState(currentSearchListData, null, \"/\");\n  }\n\n  _onCurrentTrackChange(currentTrack) {\n    this.setState({\n      currentTrack\n    });\n  }\n\n  _onLoginCallback(token) {\n    this.setState(\n      {\n        login: {\n          isLogin: true,\n          token\n        }\n      },\n      () => {\n        jukeboxApi.setAuthorizationToken(token);\n        window.history.replaceState(this._EMPTY_SEARCH_LIST_DATA, null, \"/\");\n      }\n    );\n  }\n\n  async _onQueueTrackButtonClick(track) {\n    await jukeboxApi.enqueue(track);\n    this.setState(state => ({\n      inQueueTracks: [...state.inQueueTracks, track]\n    }));\n  }\n\n  async _onViewAlbumButtonClick(album) {\n    const { tracks } = await jukeboxApi.getAlbumTracks(album);\n    this.setState(\n      {\n        currentSearchListData: {\n          ...this._EMPTY_SEARCH_LIST_DATA,\n          tracks\n        }\n      },\n      this._pushState\n    );\n  }\n\n  async _onViewArtistButtonClick(artist) {\n    const { tracks, albums } = await jukeboxApi.getArtistDetails(artist);\n    this.setState(\n      {\n        currentSearchListData: {\n          ...this._EMPTY_SEARCH_LIST_DATA,\n          tracks,\n          albums\n        }\n      },\n      this._pushState\n    );\n  }\n\n  async _onViewPlaylistButtonClick(playlist) {\n    const { tracks } = await jukeboxApi.getPlaylistTracks(playlist);\n    this.setState(\n      {\n        currentSearchListData: {\n          ...this._EMPTY_SEARCH_LIST_DATA,\n          tracks\n        }\n      },\n      this._pushState\n    );\n  }\n\n  async _onSearchButtonClick(q) {\n    const { albums, artists, tracks, playlists } = await jukeboxApi.search(q);\n    this.setState(\n      {\n        currentSearchListData: {\n          ...this._EMPTY_SEARCH_LIST_DATA,\n          albums,\n          artists,\n          playlists,\n          tracks\n        }\n      },\n      this._pushState\n    );\n  }\n\n  render() {\n    const { login } = this.state;\n\n    if (!login.isLogin) {\n      return <Login onLoginCallback={this._onLoginCallback} />;\n    }\n\n    const {\n      inQueueTracks,\n      currentTrack,\n      currentSearchListData,\n      displayPlayButton,\n      play\n    } = this.state;\n\n    return (\n      <div className={style.container}>\n        <div className={style.searchBarContainer}>\n          <SearchBar onSearchButtonClick={this._onSearchButtonClick} />\n        </div>\n        <div className={style.searchListContainer}>\n          <SearchList\n            {...currentSearchListData}\n            inQueueTracks={inQueueTracks}\n            albumComponent={AlbumListItem}\n            artistComponent={ArtistLiteItem}\n            playlistComponent={PlaylistListItem}\n            trackComponent={TrackListItem}\n            onQueueTrackButtonClick={this._onQueueTrackButtonClick}\n            onViewAlbumButtonClick={this._onViewAlbumButtonClick}\n            onViewArtistButtonClick={this._onViewArtistButtonClick}\n            onViewPlaylistButtonClick={this._onViewPlaylistButtonClick}\n          />\n        </div>\n        <div className={style.footerBarContainer}>\n          <FooterBar\n            currentTrack={currentTrack}\n            displayPlayButton={displayPlayButton}\n            onPlayButtonClick={this._onPlayButtonClick}\n          />\n        </div>\n        <PollingCurrentTrack\n          onCurrentTrackChange={this._onCurrentTrackChange}\n        />\n        <Player onPlayerReady={this._onPlayerReady} play={play} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}